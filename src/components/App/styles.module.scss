@use "sass:math";

.root {
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.title {
  position: relative;
  z-index: 2;
  font-weight: bolder;
  text-shadow: 0.5rem 1rem rgba(0, 0, 0, 0.5);
  font-size: 5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

@mixin position {
  position: absolute;
  @for $i from 0 through 100 {
    &[data-radius="#{$i}"] {
      $radius: #{$i}vw;
      left: calc(50% - #{$radius});
      top: calc(50% - #{$radius});
      width: calc(2 * #{$radius});
      height: calc(2 * #{$radius});
    }
  }
}

.radius {
  @include position;
  border: 1px solid white;
  border-radius: 50%;
}

@mixin keyframes {
  --radius: 1vw;
  --start: 270deg;
  @for $i from 0 through 100 {
    &[data-radius="#{$i}"] {
      --radius: calc(#{$i} * 1vw);
    }
  }
  // keep in mind rotation in CSS is clockwise
  --a1: rotate(var(--start));
  --a2: rotate(calc(-1 * var(--start)));
  --b1: rotate(calc(360deg + var(--start)));
  --b2: rotate(calc(-1 * (360deg +var(--start))));
  &[data-direction="reverse"] {
    --a1: rotate(calc(-1 * var(--start)));
    --a2: rotate(var(--start));
    --b1: rotate(calc(-1 * (360deg +var(--start))));
    --b2: rotate(calc(360deg + var(--start)));
  }
  @-webkit-keyframes orbit {
    from {
      -webkit-transform: var(--a1) translateX(var(--radius)) var(--a2);
    }
    to {
      -webkit-transform: var(--b1) translateX(var(--radius)) var(--b2);
    }
  }
  @-moz-keyframes orbit {
    from {
      -moz-transform: var(--a1) translateX(var(--radius)) var(--a2);
    }
    to {
      -moz-transform: var(--b1) translateX(var(--radius)) var(--b2);
    }
  }
  @-o-keyframes orbit {
    from {
      -o-transform: var(--a1) translateX(var(--radius)) var(--a2);
    }
    to {
      -o-transform: var(--b1) translateX(var(--radius)) var(--b2);
    }
  }
  @keyframes orbit {
    from {
      transform: var(--a1) translateX(var(--radius)) var(--a2);
    }
    to {
      transform: var(--b1) translateX(var(--radius)) var(--b2);
    }
  }
}

@mixin animation {
  --time: 1s;
  @for $i from 0 to 100 {
    &[data-speed="#{$i}"] {
      --time: calc(#{$i} * 1s);
    }
  }
  $animation: orbit var(--time) linear infinite;
  -webkit-animation: #{$animation};
  -moz-animation: #{$animation};
  -o-animation: #{$animation};
  animation: #{$animation};
}

.message {
  @include keyframes;
  @include animation;
  font-size: 2rem;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  position: absolute;
  left: calc(50% - 50px);
  border: 1px solid white;
  top: calc(50% - 50px);
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background-color: rgb(50, 50, 50);
}

.icon {
  font-size: 5rem;
}
